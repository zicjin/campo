- @page_title = @topic.title

.main
  .container
    .row
      .col-md-8.col-md-push-2
        .panel
          .panel-heading
            h3.panel-title = @topic.title
          .panel-body
            = form_for [:admin, @topic], html: { class: 'topic-form' } do |f|
              = render 'share/flash_messages'
              = render 'share/form_error_messages', form: f
              .form-group
                = f.label :user
                p
                  a href=admin_user_path(@topic.user)
                    = @topic.user.name
              .row
                .col-md-9
                  .form-group
                    = f.text_field :title, class: 'form-control', tabIndex: 1
                .col-md-3
                  .form-group
                    = f.collection_select :category_id, @categories.order(topics_count: :desc), :id, :name, {}, class: 'form-control', tabIndex: 2
              .form-group
                = markdown_area f, :body, tabIndex: 3
              .form-group
                = f.label :created_at
                = f.text_field :created_at, class: 'form-control', disabled: true
              .form-group
                = f.label :comments_count
                = f.text_field :comments_count, class: 'form-control', disabled: true
              .clearfix
                = f.submit t('.save_changes'), class: 'btn btn-success', tabIndex: 4
                .pull-right
                  - if @topic.trashed?
                    a.btn.btn-default href=restore_admin_tennis_topic_path(@topic) data-method="patch"
                       = t '.restore'
                  - else
                    a.btn.btn-default href=trash_admin_tennis_topic_path(@topic) data-method="delete" data-confirm=t('.delete_confirm')
                      = t '.delete'

javascript:
  $('form.topic-form').validate({
    rules: {
      'topic[title]': {
        required: true
      },
      'topic[body]': {
        required: true
      }
    },
    messages: {
      'topic[title]': {
        required: '#{@topic.errors.generate_message :title, :blank}'
      },
      'topic[body]': {
        required: '#{@topic.errors.generate_message :body, :blank}'
      }
    }
  });
